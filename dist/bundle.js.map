{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///bundle.js","webpack:///webpack/bootstrap caf1ee93b28684627d79","webpack:///./src/index.js","webpack:///./src/lib/util.js","webpack:///./src/match/config.js","webpack:///./src/match/match.js","webpack:///./src/match/stack.js","webpack:///./src/lib/type.js","webpack:///./src/lib/typeTrans.js","webpack:///./src/match/auto-complete.js","webpack:///./src/match/filter.js","webpack:///./src/match/parse.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_match","_match2","Object","defineProperty","value","_typeTrans","keys","forEach","key","enumerable","get","_type","hasReg","token","length","extendConfig","undefined","_util","config","filterUndefined","filterNull","autoComplete","ignoreTokenKey","isObj","assign","console","log","matchArray","matchObject","_parse","_stack","_filter","_filter2","_autoComplete","_autoComplete2","_config","_config2","data","exp","result","i","parse","parseToData","arr","match","combineData","keyData","isArray","parseConfig","configTmp","configCache","register","name","pushStack","update","updateStack","remove","removeStack","removeAll","cleanStack","stack","has","push","e","splice","prototype","toString","isFun","isStr","str","isNum","num","typeTrans","type","toLowerCase","parseInt","parseFloat","typeCharge","trim","stringReg","arrayReg","objectReg","test","pop","boo","objToArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","concat","err","return","hasOwnProperty","filter","_stack2","getData","strArr","parseResult","objTokenReg","arrTokenReg","typeTokenReg","isIgnore","split","that","getArrData","apply","par","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","index","shift","join","indexOf"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,MAAAD,IAEAD,EAAA,MAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAAUL,EAAQD,EAASM,GAEhC,YAMA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GE9DxF,GAAAG,GAAAb,EAAA,GF4DKc,EAAUL,EAAuBI,EE1DtClB,GAAOD,QAAPoB,EAAAF,SFkEM,SAAUjB,EAAQD,EAASM,GAEhC,YAEAe,QAAOC,eAAetB,EAAS,cAC3BuB,OAAO,GAGX,IAAIC,GAAalB,EAAoB,EG5EtCe,QAAAI,KAAAD,GAAAE,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAN,OAAAC,eAAAtB,EAAA2B,GAAAC,YAAA,EAAAC,IAAA,iBAAAL,GAAAG,OHwFC,IAAIG,GAAQxB,EAAoB,EGvFjCe,QAAAI,KAAAK,GAAAJ,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAN,OAAAC,eAAAtB,EAAA2B,GAAAC,YAAA,EAAAC,IAAA,iBAAAC,GAAAH,OAMaI,UAAS,SAClBC,GAEA,MAAQA,IAASA,EAAMC,QAAUD,EAAMC,QAAU,IHoG/C,SAAUhC,EAAQD,EAASM,GAEhC,YAEAe,QAAOC,eAAetB,EAAS,cAC3BuB,OAAO,IAEXvB,EAAQkC,aAAeC,MIlHxB,IAAAC,GAAA9B,EAAA,GAEI+B,GACAC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,EACdC,kBJyHHzC,GAAQkB,QItHMmB,CAEFH,gBAAe,SACxBlB,GAGA,OAAK,EAAAoB,EAAAM,OAAM1B,OAKXK,QAAOsB,OAAON,EAAQrB,OAJlB4B,SAAQC,IAAI,uBJ4Hd,SAAU5C,EAAQD,EAASM,GAEhC,YAyBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAvBvFK,OAAOC,eAAetB,EAAS,cAC3BuB,OAAO,IAEXvB,EAAQ8C,WAAa9C,EAAQ+C,YAAcZ,MKtJ5C,IAAAa,GAAA1C,EAAA,GACA8B,EAAA9B,EAAA,GAKA2C,EAAA3C,EAAA,GACA4C,EAAA5C,EAAA,GLyJK6C,EAAWpC,EAAuBmC,GKxJvCE,EAAA9C,EAAA,GL4JK+C,EAAiBtC,EAAuBqC,GK3J7CE,EAAAhD,EAAA,GL+JKiD,EAAWxC,EAAuBuC,GKzJ1BP,gBAAc,SACvBS,EACAxC,GAEA,GAAIyC,UACAC,IAEJ,KAAK,GAAIC,KAAK3C,GACVyC,GAAM,EAAAT,EAAAY,OAAM5C,EAAI2C,GAAIA,GACpBD,EAAOC,IAAK,EAAAX,EAAAa,aAAYJ,EAAKD,EAAME,IACnC,EAAAP,EAAAjC,SAAOyC,EAAGD,EAId,QAFA,EAAAL,EAAAnC,SAAawC,EAAQF,GAEdE,GAMEZ,eAAa,SACtBU,EACAM,GAEA,GACIJ,KAEJ,IAAmB,IAAfI,EAAI7B,OAEJ,IAAK,GAAI0B,GAAI,EAAGA,EAAIH,EAAKvB,OAAQ0B,IAC7BD,EAAOC,GAAKZ,EAAYS,EAAKG,GAAIG,EAAI,GAI7C,IAAmB,IAAfA,EAAI7B,OAAc,CAElBuB,EAAMA,EAAKM,EAAI,GACf,KAAK,GAAIH,GAAI,EAAGA,EAAIH,EAAKvB,OAAQ0B,IAC7BD,EAAOC,GAAKZ,EAAYS,EAAKG,GAAIG,EAAI,IAI7C,MAAOJ,IAGLK,GACFH,MAAO,SACHI,EACAC,GAEA,GACIP,SAUJ,QARI,EAAAtB,EAAAM,OAAMuB,KACNP,EAASX,EAAYiB,EAAaC,KAGlC,EAAA7B,EAAA8B,SAAQD,KACRP,EAASZ,EAAWkB,EAAaC,IAG9BP,GAEXS,YAlBU,SAmBNH,EACAC,EACAG,GAGA,GAAMC,GAAchD,OAAOsB,UAAPY,EAAArC,SAChBsC,QAMJ,QAJA,EAAAF,EAAApB,cAAakC,GACbZ,EAAOpD,KAAKwD,MAAMI,EAAaC,IAC/B,EAAAX,EAAApB,cAAamC,GAENb,GAGXc,SAAU,SACNtD,EACAuD,IAEA,EAAAtB,EAAAuB,YACIjD,MAAOP,EACPuD,KAAMA,KAGdE,OAAQ,SACJzD,EACAuD,IAEA,EAAAtB,EAAAyB,aAAY1D,EAAKuD,IAGrBI,OAAQ,SACJJ,IAEA,EAAAtB,EAAA2B,aAAYL,IAEhBM,UAAW,YAEP,EAAA5B,EAAA6B,eAEJzC,OAAQ,SACJrB,IAEA,EAAAsC,EAAApB,cAAalB,IL4IpBhB,GAAQkB,QKxIM6C,GL4IT,SAAU9D,EAAQD,EAASM,GAEhC,YAEAe,QAAOC,eAAetB,EAAS,cAC3BuB,OAAO,IAEXvB,EAAQ8E,WAAa9E,EAAQ4E,YAAc5E,EAAQ0E,YAAc1E,EAAQwE,UAAYrC,MM9QtF,IAOI4C,IAPJzE,EAAA,MNqRCN,GAAQkB,QM5QM6D,CAEFP,aAAY,SACrB7C,GAGA,IAAK,GADDqD,IAAM,EACDrB,EAAI,EAAGA,EAAIoB,EAAM9C,OAAQ0B,IAC1BoB,EAAMpB,GAAGY,OAAS5C,EAAI4C,OACtBQ,EAAMpB,GAAKhC,EACXqD,GAAM,EAITA,IAAKD,EAAME,KAAKtD,IAGZ+C,cAAc,SACvB/C,EACA4C,GAEA,IACI,IAAK,GAAIZ,GAAI,EAAGA,EAAIoB,EAAM9C,OAAQ0B,IAC1BoB,EAAMpB,GAAGY,OAASA,IAClBQ,EAAMpB,GAAGpC,MAAQI,GAG3B,MAAOuD,GACLtC,QAAQC,IAAIqC,KAIPN,cAAc,SACvBL,GAEA,IAAK,GAAIZ,GAAI,EAAGA,EAAIoB,EAAM9C,QAClB8C,EAAMpB,GAAGY,OAASA,EAClBQ,EAAMI,OAAOxB,EAAG,GAEhBA,KAKCmB,aAAa,WACtBC,ONyQE,SAAU9E,EAAQD,GAEvB,YAEAqB,QAAOC,eAAetB,EAAS,cAC3BuB,OAAO,GOtUCmB,SAAQ,SAAC1B,GAClB,MAA+C,oBAAxCK,OAAO+D,UAAUC,SAAS1E,KAAKK,IAG7BsE,QAAQ,SAACtE,GAClB,MAA+C,sBAAxCK,OAAO+D,UAAUC,SAAS1E,KAAKK,IAG7BkD,UAAU,SAAClD,GACpB,MAA+C,mBAAxCK,OAAO+D,UAAUC,SAAS1E,KAAKK,IAG7BuE,QAAQ,SAACC,GAClB,MAA+C,oBAAxCnE,OAAO+D,UAAUC,SAAS1E,KAAK6E,IAG7BC,QAAQ,SAACC,GAClB,MAA+C,oBAAxCrE,OAAO+D,UAAUC,SAAS1E,KAAK+E,KP6UpC,SAAUzF,EAAQD,GAEvB,YAEAqB,QAAOC,eAAetB,EAAS,cAC3BuB,OAAO,GQnWCoE,aAAY,SACrBnC,EACAoC,GAGA,MAAa,YAATA,EAC8B,UAAvBpC,EAAKqC,cAGH,YAATD,IACSpC,EAGA,QAAToC,EACOE,SAAStC,EAAM,IAGb,UAAToC,EACOG,WAAWvC,EAAM,IAGf,WAAToC,EACOpC,EAAK6B,WADhB,QAQSW,aAAa,SACtBR,GAEA,IACIA,EAAMA,EAAIS,MACV,IAAMC,GAAY,iBACZC,EAAW,SACXC,EAAY,QAGlB,IAAIF,EAAUG,KAAKb,GAGf,MADAA,GAAMA,EAAIzB,MAAMmC,GAAWI,KAI/B,IAAIH,EAASE,KAAKb,GACd,QAGJ,IAAIY,EAAUC,KAAKb,GACf,QAIJ,IAAIE,GAAMK,WAAWP,GACjBe,EAAc,UAARf,IAAmC,SAARA,GAAuB,GAE5D,OADAA,GAAME,GAAe,KAARa,EAAab,GAAOa,EAAMf,EAEzC,MAAON,GACL,MAAOM,KAIFgB,aAAa,SACtBhD,EACA7B,GAEA,IACI,GAAImC,MADJ2C,GAAA,EAAAC,GAAA,EAAAC,EAAAxE,MAAA,KAEA,OAAAyE,GAAAC,EAAcrD,EAAdsD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoB,IAAX9C,GAAWiD,EAAArF,KAChBuC,GAAMA,EAAIoD,OAAOvD,EAAEhC,KAHvB,MAAAwF,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAMA,MAAO7C,GACT,MAAOoB,GACL,YRyXF,SAAUjF,EAAQD,EAASM,GAEhC,YAUA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GARvFK,OAAOC,eAAetB,EAAS,cAC3BuB,OAAO,GStcZ,IAAA+B,GAAAhD,EAAA,GT2cKiD,EAAWxC,EAAuBuC,GSzcjCd,EAAe,SACjBkB,EACAF,GAGA,GAAKD,EAAArC,QAAOsB,aAEZ,IAAK,GAAImB,KAAKH,GACLE,EAAO2D,eAAe1D,KACvBD,EAAOC,GAAKH,EAAKG,ITgd5B3D,GAAQkB,QS3cMsB,GT+cT,SAAUvC,EAAQD,EAASM,GAEhC,YAUA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GARvFK,OAAOC,eAAetB,EAAS,cAC3BuB,OAAO,GUpeZ,IAAA+B,GAAAhD,EAAA,GVyeKiD,EAAWxC,EAAuBuC,GUvejCgE,EAAS,SACX3F,EACA+B,GAEIH,EAAArC,QAAOoB,iBAAmCH,SAAhBuB,EAAO/B,UAC1B+B,GAAO/B,GAGd4B,EAAArC,QAAOqB,YAA8B,OAAhBmB,EAAO/B,UACrB+B,GAAO/B,GV6erB3B,GAAQkB,QUzeMoG,GV6eT,SAAUrH,EAAQD,EAASM,GAEhC,YAmBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAjBvFK,OAAOC,eAAetB,EAAS,cAC3BuB,OAAO,IAEXvB,EAAQ6D,YAAc7D,EAAQ4D,MAAQzB,MWngBvC,IAAAC,GAAA9B,EAAA,GAYAa,EAAAb,EAAA,GAKAgD,EAAAhD,EAAA,GX0fKiD,EAAWxC,EAAuBuC,GWxfvCL,EAAA3C,EAAA,GX4fKiH,EAAUxG,EAAuBkC,GWnXhCuE,GAvIO5D,QAAQ,SACjB4B,EACA7D,GAEA,GAAI8F,UACA9D,SACA3B,SACA0F,KAEEC,EAAc,mBACdC,EAAc,aACdC,EAAe,0CAErB,KAAI,EAAAzF,EAAAM,OAAM8C,GAGN,MADAkC,GAAA,YAA6BlC,EACtBkC,CAGX,KAAI,EAAAtF,EAAA8B,SAAQsB,GAGR,MADAkC,GAAA,WAA4BlC,EACrBkC,CAGX,KAAI,EAAAtF,EAAAkD,OAAME,GAGN,MADAkC,GAAA,SAA0BlC,EACnBkC,CAGX,MAAK,EAAAtF,EAAAmD,OAAMC,IACPsC,EAASnG,KACPgG,EAAYtB,KAAKb,KACdoC,EAAYvB,KAAKb,GAItB,MADAkC,GAAA,QAAyBlC,EAClBkC,CAGXD,GAASjC,EAAIuC,MAAM,KAtCrB,IAAAtB,IAAA,EAAAC,GAAA,EAAAC,EAAAxE,MAAA,KAuCE,OAAAyE,GAAAC,EAAUY,EAAVX,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAK9C,EAAaiD,EAAArF,MACdS,EAAQ2B,EAAEsC,OAAOlC,MAAM8D,IACnB,EAAAzF,EAAAL,QAAOC,KACP0F,EAAA,UAA2B1F,EAAM,IAGrCA,EAAQ2B,EAAEsC,OAAOlC,MAAM4D,GAEnB3F,GAASA,EAAMC,QAAUD,EAAMC,QAAU,EACzCyF,EAAA,WAA4B1F,EAAM,IAItCA,EAAQ2B,EAAEsC,OAAOlC,MAAM6D,GAEnB5F,GAASA,EAAMC,QAAUD,EAAMC,QAAU,EACzCyF,EAAA,cAA+B1F,EAAM,GAIpCA,IAID0F,EAAA,QAAyB/D,EAAEsC,SA/DrC,MAAAkB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAqEE,MAAOe,IAME7D,cAAc,SACvBJ,EACAD,EACAwE,GAEA,IACI,GAAItE,SAGJ,IAAID,EAAA,YAEA,MADAC,IAAS,EAAAvC,EAAA4B,aAAYS,EAAMC,EAAA,YAI/B,IAAIA,EAAA,WAEA,MADAC,IAAS,EAAAvC,EAAA2B,YAAWU,EAAMC,EAAA,WAI9B,IAAIA,EAAA,QAEA,MADAC,GAASD,EAAA,OASb,IAAIA,EAAA,WAGA,MAFAC,GAAS8D,EAAQhE,EAAMC,EAAA,WAAmBA,EAAA,WAC1CC,EAAoBvB,SAAXuB,GAAuB,EAAAtB,EAAA4D,YAAWvC,EAAA,SAAkBC,CAIjE,IAAGD,EAAA,cAGC,MAFAC,GAASuE,EAAWzE,EAAMC,EAAA,cAAsBA,EAAA,WAChDC,EAAoBvB,SAAXuB,GAAuB,EAAAtB,EAAA4D,YAAWvC,EAAA,SAAkBC,CAIjE,IAAID,EAAA,SAEA,MADAC,GAASD,EAAA,SAAgByE,MAAMF,GAAOxE,GAAM0D,QAAO,EAAA9E,EAAAoE,YAAAe,EAAArG,QAAkB,WAG3E,MAAOgE,GACLtC,QAAQC,IAAIqC,KAWJ,SACZ1B,EACAC,EACAmC,GAEA,GAAIuC,GAAM3E,EACNxB,EAAQyB,EAAIsE,MAAM,KAFrBK,GAAA,EAAAC,GAAA,EAAAC,EAAAnG,MAAA,KAID,OAAAoG,GAAAC,EAAcxG,EAAd8E,OAAAC,cAAAqB,GAAAG,EAAAC,EAAAxB,QAAAC,MAAAmB,GAAA,EAAqB,IAAZzE,GAAY4E,EAAAhH,KACjB4G,GAAMA,EAAIxE,IALb,MAAAwD,GAAAkB,GAAA,EAAAC,EAAAnB,EAAA,aAAAiB,GAAAI,EAAApB,QAAAoB,EAAApB,SAAA,WAAAiB,EAAA,KAAAC,IAQD,MAAO1C,IAAO,EAAAxD,EAAAuD,WAAUwC,EAAKvC,GAAQuC,IAGnCF,EAAa,SACfzE,EACAC,EACAmC,GAEA,GAAI5D,GAAQyB,EAAIsE,MAAM,KAClBU,EAAQ3C,SAAS9D,EAAM0G,QAAS,GACpC,QAAK,EAAAtG,EAAAqD,OAAMgD,IAA0BtG,SAAhBqB,EAAKiF,GAKnBjB,EAAQhE,EAAKiF,GAAQzG,EAAM2G,KAAK,KAAM/C,OAJzChD,SAAQC,IAAI,yCAOdiF,EAAW,SACbnG,GAEA,MAAO4B,GAAArC,QAAOuB,eAAemG,QAAQjH,MAAS","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"match\"] = factory();\n\telse\n\t\troot[\"match\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"match\"] = factory();\n\telse\n\t\troot[\"match\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _match = __webpack_require__(3);\n\t\n\tvar _match2 = _interopRequireDefault(_match);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tmodule.exports = _match2.default;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeTrans = __webpack_require__(6);\n\t\n\tObject.keys(_typeTrans).forEach(function (key) {\n\t    if (key === \"default\" || key === \"__esModule\") return;\n\t    Object.defineProperty(exports, key, {\n\t        enumerable: true,\n\t        get: function get() {\n\t            return _typeTrans[key];\n\t        }\n\t    });\n\t});\n\t\n\tvar _type = __webpack_require__(5);\n\t\n\tObject.keys(_type).forEach(function (key) {\n\t    if (key === \"default\" || key === \"__esModule\") return;\n\t    Object.defineProperty(exports, key, {\n\t        enumerable: true,\n\t        get: function get() {\n\t            return _type[key];\n\t        }\n\t    });\n\t});\n\t\n\t\n\t/**\r\n\t * 正则match可以匹配上第一个缓存\r\n\t */\n\tvar hasReg = exports.hasReg = function hasReg(token) {\n\t    return token && token.length && token.length >= 1;\n\t};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.extendConfig = undefined;\n\t\n\tvar _util = __webpack_require__(1);\n\t\n\t// 全局配置项\n\tvar config = {\n\t    filterUndefined: true, // 过滤undefined\n\t    filterNull: true, // 过滤null\n\t    autoComplete: false, // 自动补全\n\t    ignoreTokenKey: [] // 忽略解析的key\n\t}; /**\r\n\t    * @descrption 增加全局配置项\r\n\t    */\n\texports.default = config;\n\tvar extendConfig = exports.extendConfig = function extendConfig(obj) {\n\t\n\t    if (!(0, _util.isObj)(obj)) {\n\t        console.log('error config type');\n\t        return;\n\t    }\n\t\n\t    Object.assign(config, obj);\n\t};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.matchArray = exports.matchObject = undefined;\n\t\n\tvar _parse = __webpack_require__(9);\n\t\n\tvar _util = __webpack_require__(1);\n\t\n\tvar _stack = __webpack_require__(4);\n\t\n\tvar _filter = __webpack_require__(8);\n\t\n\tvar _filter2 = _interopRequireDefault(_filter);\n\t\n\tvar _autoComplete = __webpack_require__(7);\n\t\n\tvar _autoComplete2 = _interopRequireDefault(_autoComplete);\n\t\n\tvar _config = __webpack_require__(2);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * 对象映射\r\n\t */\n\tvar matchObject = exports.matchObject = function matchObject(data, obj) {\n\t    var exp = void 0;\n\t    var result = {};\n\t\n\t    for (var i in obj) {\n\t        exp = (0, _parse.parse)(obj[i], i);\n\t        result[i] = (0, _parse.parseToData)(exp, data, result);\n\t        (0, _filter2.default)(i, result);\n\t    }\n\t    (0, _autoComplete2.default)(result, data);\n\t\n\t    return result;\n\t};\n\t\n\t/**\r\n\t * 数组映射\r\n\t */\n\tvar matchArray = exports.matchArray = function matchArray(data, arr) {\n\t    var exp = void 0;\n\t    var result = [];\n\t\n\t    if (arr.length === 1) {\n\t        // 直接映射 data\n\t        for (var i = 0; i < data.length; i++) {\n\t            result[i] = matchObject(data[i], arr[0]);\n\t        }\n\t    }\n\t\n\t    if (arr.length === 2) {\n\t        // 映射data的对象\n\t        data = data[arr[0]];\n\t        for (var _i = 0; _i < data.length; _i++) {\n\t            result[_i] = matchObject(data[_i], arr[1]);\n\t        }\n\t    }\n\t\n\t    return result;\n\t};\n\t\n\tvar match = {\n\t    parse: function parse(combineData, keyData) {\n\t        var matchData = {};\n\t        var result = void 0;\n\t\n\t        if ((0, _util.isObj)(keyData)) {\n\t            result = matchObject(combineData, keyData);\n\t        }\n\t\n\t        if ((0, _util.isArray)(keyData)) {\n\t            result = matchArray(combineData, keyData);\n\t        }\n\t\n\t        return result;\n\t    },\n\t    parseConfig: function parseConfig(combineData, keyData, configTmp) {\n\t        // 代表此次match使用传入的config\n\t        var configCache = Object.assign({}, _config2.default);\n\t        var data = void 0;\n\t\n\t        (0, _config.extendConfig)(configTmp);\n\t        data = this.parse(combineData, keyData);\n\t        (0, _config.extendConfig)(configCache);\n\t\n\t        return data;\n\t    },\n\t\n\t    register: function register(obj, name) {\n\t        (0, _stack.pushStack)({\n\t            value: obj,\n\t            name: name\n\t        });\n\t    },\n\t    update: function update(obj, name) {\n\t        (0, _stack.updateStack)(obj, name);\n\t    },\n\t    // 移除register的内容\n\t    remove: function remove(name) {\n\t        (0, _stack.removeStack)(name);\n\t    },\n\t    removeAll: function removeAll() {\n\t        (0, _stack.cleanStack)();\n\t    },\n\t    config: function config(obj) {\n\t        (0, _config.extendConfig)(obj);\n\t    }\n\t};\n\t\n\texports.default = match;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.cleanStack = exports.removeStack = exports.updateStack = exports.pushStack = undefined;\n\t\n\tvar _util = __webpack_require__(1);\n\t\n\tvar stack = []; /**\r\n\t                 * @description 存储公共内容\r\n\t                 */\n\texports.default = stack;\n\tvar pushStack = exports.pushStack = function pushStack(key) {\n\t    var has = false;\n\t    for (var i = 0; i < stack.length; i++) {\n\t        if (stack[i].name === key.name) {\n\t            stack[i] = key;\n\t            has = true;\n\t        }\n\t    }\n\t\n\t    if (!has) stack.push(key);\n\t};\n\t\n\tvar updateStack = exports.updateStack = function updateStack(key, name) {\n\t    try {\n\t        for (var i = 0; i < stack.length; i++) {\n\t            if (stack[i].name === name) {\n\t                stack[i].value = key;\n\t            }\n\t        }\n\t    } catch (e) {\n\t        console.log(e);\n\t    }\n\t};\n\t\n\tvar removeStack = exports.removeStack = function removeStack(name) {\n\t    for (var i = 0; i < stack.length;) {\n\t        if (stack[i].name === name) {\n\t            stack.splice(i, 1);\n\t        } else {\n\t            i++;\n\t        }\n\t    }\n\t};\n\t\n\tvar cleanStack = exports.cleanStack = function cleanStack() {\n\t    stack = [];\n\t};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar isObj = exports.isObj = function isObj(obj) {\n\t    return Object.prototype.toString.call(obj) === '[object Object]';\n\t};\n\t\n\tvar isFun = exports.isFun = function isFun(obj) {\n\t    return Object.prototype.toString.call(obj) === '[object Function]';\n\t};\n\t\n\tvar isArray = exports.isArray = function isArray(obj) {\n\t    return Object.prototype.toString.call(obj) === '[object Array]';\n\t};\n\t\n\tvar isStr = exports.isStr = function isStr(str) {\n\t    return Object.prototype.toString.call(str) === '[object String]';\n\t};\n\t\n\tvar isNum = exports.isNum = function isNum(num) {\n\t    return Object.prototype.toString.call(num) === '[object Number]';\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar typeTrans = exports.typeTrans = function typeTrans(data, type) {\n\t    // 字符串对应的 false 转化为false true 转化为true\n\t    if (type === 'boolean') {\n\t        return data.toLowerCase() === 'false' ? false : true;\n\t    }\n\t\n\t    if (type === 'Boolean') {\n\t        return !!data;\n\t    }\n\t\n\t    if (type === 'int') {\n\t        return parseInt(data, 10);\n\t    }\n\t\n\t    if (type === 'float') {\n\t        return parseFloat(data, 10);\n\t    }\n\t\n\t    if (type === 'string') {\n\t        return data.toString();\n\t    }\n\t};\n\t\n\t/**\n\t * @description 类型转换\n\t **/\n\tvar typeCharge = exports.typeCharge = function typeCharge(str) {\n\t    try {\n\t        str = str.trim();\n\t        var stringReg = /^(['\"])(.*)\\1$/;\n\t        var arrayReg = /^\\[\\]$/;\n\t        var objectReg = /^\\{\\}$/;\n\t\n\t        // 若果是以''包住 或者\"\"包住\n\t        if (stringReg.test(str)) {\n\t            // 返回字符串\n\t            str = str.match(stringReg).pop();\n\t            return str;\n\t        }\n\t\n\t        if (arrayReg.test(str)) {\n\t            return [];\n\t        }\n\t\n\t        if (objectReg.test(str)) {\n\t            return {};\n\t        }\n\t\n\t        // 说明不是字符串类型的值\n\t        var num = parseFloat(str);\n\t        var boo = str === 'false' ? false : str === 'true' ? true : '';\n\t        str = num || boo !== '' ? num || boo : str;\n\t        return str;\n\t    } catch (e) {\n\t        return str;\n\t    }\n\t};\n\t\n\tvar objToArray = exports.objToArray = function objToArray(data, key // 转化你的值\n\t) {\n\t    try {\n\t        var arr = [];\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t            for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var i = _step.value;\n\t\n\t                arr = arr.concat(i[key]);\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion && _iterator.return) {\n\t                    _iterator.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError) {\n\t                    throw _iteratorError;\n\t                }\n\t            }\n\t        }\n\t\n\t        return arr;\n\t    } catch (e) {\n\t        return [];\n\t    };\n\t};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _config = __webpack_require__(2);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar autoComplete = function autoComplete(result, data) {\n\t\n\t    if (!_config2.default.autoComplete) return;\n\t\n\t    for (var i in data) {\n\t        if (!result.hasOwnProperty(i)) {\n\t            result[i] = data[i];\n\t        }\n\t    }\n\t}; /**\r\n\t    * @description match的自动补全\r\n\t    */\n\texports.default = autoComplete;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _config = __webpack_require__(2);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar filter = function filter(key, result) {\n\t    if (_config2.default.filterUndefined && result[key] === undefined) {\n\t        delete result[key];\n\t    }\n\t\n\t    if (_config2.default.filterNull && result[key] === null) {\n\t        delete result[key];\n\t    }\n\t}; /**\r\n\t    * @descprtion 过滤函数 过滤一些undefined等特殊情况\r\n\t    */\n\texports.default = filter;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.parseToData = exports.parse = undefined;\n\t\n\tvar _util = __webpack_require__(1);\n\t\n\tvar _match = __webpack_require__(3);\n\t\n\tvar _config = __webpack_require__(2);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _stack = __webpack_require__(4);\n\t\n\tvar _stack2 = _interopRequireDefault(_stack);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * @description 字符串解析内容\r\n\t */\n\tvar parse = exports.parse = function parse(str, key) {\n\t    var strArr = void 0;\n\t    var i = void 0;\n\t    var token = void 0;\n\t    var parseResult = {};\n\t    var objTokenReg = /\\$\\$\\{\\{(.*)\\}\\}/;\n\t    var arrTokenReg = /\\$\\{(.*)\\}/;\n\t    var typeTokenReg = /\\((boolean|Boolean|int|string|float)\\)\\$/;\n\t\n\t    if ((0, _util.isObj)(str)) {\n\t        // 递归映射\n\t        parseResult['matchObject'] = str;\n\t        return parseResult;\n\t    }\n\t\n\t    if ((0, _util.isArray)(str)) {\n\t        // 数组递归映射\n\t        parseResult['matchArray'] = str;\n\t        return parseResult;\n\t    }\n\t\n\t    if ((0, _util.isFun)(str)) {\n\t        // 执行函数\n\t        parseResult['matchFun'] = str;\n\t        return parseResult;\n\t    }\n\t\n\t    if (!(0, _util.isStr)(str) || isIgnore(key) || !objTokenReg.test(str) && !arrTokenReg.test(str)) {\n\t        // 不是字符串 直接返回\n\t        parseResult['noMatch'] = str;\n\t        return parseResult;\n\t    }\n\t\n\t    strArr = str.split('||');\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = strArr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            i = _step.value;\n\t\n\t            token = i.trim().match(typeTokenReg);\n\t            if ((0, _util.hasReg)(token)) {\n\t                parseResult['matchType'] = token[1];\n\t            }\n\t\n\t            token = i.trim().match(objTokenReg);\n\t\n\t            if (token && token.length && token.length >= 1) {\n\t                parseResult['matchParam'] = token[1];\n\t                continue;\n\t            }\n\t\n\t            token = i.trim().match(arrTokenReg);\n\t\n\t            if (token && token.length && token.length >= 1) {\n\t                parseResult['matchArrParam'] = token[1];\n\t                continue;\n\t            }\n\t\n\t            if (!token) {\n\t                //if (i.indexOf('{{') !== -1) {\n\t                //    parseResult['defaultParam'] = 'return b';\n\t                //} else {\n\t                parseResult['default'] = i.trim();\n\t                continue;\n\t                //}\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    return parseResult;\n\t};\n\t\n\t/**\r\n\t * @description 把exp解析的内容反装回真是值\r\n\t */\n\tvar parseToData = exports.parseToData = function parseToData(exp, // parse 返回值\n\tdata, // 映射的params数组\n\tthat // 返回对象指针\n\t) {\n\t    try {\n\t        var result = void 0;\n\t\n\t        if (exp['matchObject']) {\n\t            result = (0, _match.matchObject)(data, exp['matchObject']);\n\t            return result;\n\t        }\n\t\n\t        if (exp['matchArray']) {\n\t            result = (0, _match.matchArray)(data, exp['matchArray']);\n\t            return result;\n\t        }\n\t\n\t        if (exp['noMatch']) {\n\t            result = exp['noMatch'];\n\t            return result;\n\t        }\n\t\n\t        //if (exp['defaultParam']) {\n\t        //    result = getData(data, exp['matchParam']) || getParams(exp['defaultParam'], obj);\n\t        //    return result;\n\t        //}\n\t\n\t        if (exp['matchParam']) {\n\t            result = getData(data, exp['matchParam'], exp['matchType']);\n\t            result = result === undefined ? (0, _util.typeCharge)(exp['default']) : result;\n\t            return result;\n\t        }\n\t\n\t        if (exp['matchArrParam']) {\n\t            result = getArrData(data, exp['matchArrParam'], exp['matchType']);\n\t            result = result === undefined ? (0, _util.typeCharge)(exp['default']) : result;\n\t            return result;\n\t        }\n\t\n\t        if (exp['matchFun']) {\n\t            result = exp['matchFun'].apply(that, [data].concat((0, _util.objToArray)(_stack2.default, 'value')));\n\t            return result;\n\t        }\n\t    } catch (e) {\n\t        console.log(e);\n\t    }\n\t};\n\t\n\tvar getParams = function getParams(str, obj) {\n\t    var createFun = function createFun() {\n\t        return new Function(str);\n\t    };\n\t    obj.title = createFun();\n\t};\n\t\n\tvar getData = function getData(data, exp, type // 对应的类型\n\t) {\n\t    var par = data;\n\t    var token = exp.split('.');\n\t    // 递归获取\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\t\n\t    try {\n\t        for (var _iterator2 = token[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var i = _step2.value;\n\t\n\t            par = par[i];\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                _iterator2.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError2) {\n\t                throw _iteratorError2;\n\t            }\n\t        }\n\t    }\n\t\n\t    return type ? (0, _util.typeTrans)(par, type) : par;\n\t};\n\t\n\tvar getArrData = function getArrData(data, exp, type // 对应的类型\n\t) {\n\t    var token = exp.split('.');\n\t    var index = parseInt(token.shift(), 10);\n\t    if (!(0, _util.isNum)(index) || data[index] === undefined) {\n\t        console.log('error: the Array index is not exist!');\n\t        return undefined;\n\t    }\n\t\n\t    return getData(data[index], token.join('.'), type);\n\t};\n\t\n\tvar isIgnore = function isIgnore(key) {\n\t    return _config2.default.ignoreTokenKey.indexOf(key) !== -1;\n\t};\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap caf1ee93b28684627d79","import match from 'MATCH/match';\n\nmodule.exports = match;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export * from './typeTrans';\r\nexport * from './type';\r\n\r\n\r\n/**\r\n * 正则match可以匹配上第一个缓存\r\n */\r\nexport const hasReg = (\r\n    token: Any\r\n) => {\r\n    return (token && token.length && token.length >= 1);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/util.js","/**\r\n * @descrption 增加全局配置项\r\n */\r\nimport { isObj } from 'LIB/util';\r\n// 全局配置项\r\nlet config = {\r\n    filterUndefined: true, // 过滤undefined\r\n    filterNull: true, // 过滤null\r\n    autoComplete: false, // 自动补全\r\n    ignoreTokenKey: [] // 忽略解析的key\r\n};\r\n\r\nexport default config;\r\n\r\nexport const extendConfig = (\r\n    obj: object\r\n) => {\r\n\r\n    if (!isObj(obj)) {\r\n        console.log('error config type');\r\n        return;\r\n    }\r\n\r\n    Object.assign(config, obj);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/match/config.js","import { parse , parseToData } from 'MATCH/parse';\r\nimport {\r\n    isFun,\r\n    isObj,\r\n    isArray\r\n} from 'LIB/util';\r\nimport { pushStack, removeStack, cleanStack, updateStack } from 'MATCH/stack';\r\nimport filter from 'MATCH/filter';\r\nimport autoComplete from 'MATCH/auto-complete';\r\nimport config , { extendConfig } from 'MATCH/config';\r\n\r\n\r\n/**\r\n * 对象映射\r\n */\r\nexport const matchObject = function (\r\n    data: any,\r\n    obj: object\r\n) {\r\n    let exp;\r\n    let result = {};\r\n\r\n    for (let i in obj) {\r\n        exp = parse(obj[i], i);\r\n        result[i] = parseToData(exp, data, result);\r\n        filter(i, result);\r\n    }\r\n    autoComplete(result, data);\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * 数组映射\r\n */\r\nexport const matchArray = function (\r\n    data: any,\r\n    arr: Array\r\n) {\r\n    let exp;\r\n    let result = [];\r\n\r\n    if (arr.length === 1) {\r\n        // 直接映射 data\r\n        for (let i = 0; i < data.length; i++) {\r\n            result[i] = matchObject(data[i], arr[0]);\r\n        }\r\n    }\r\n\r\n    if (arr.length === 2) {\r\n        // 映射data的对象\r\n        data= data[arr[0]];\r\n        for (let i = 0; i < data.length; i++) {\r\n            result[i] = matchObject(data[i], arr[1]);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nconst match = {\r\n    parse: (\r\n        combineData: object | Array,\r\n        keyData: object | Array\r\n    ) => {\r\n        let matchData = {};\r\n        let result;\r\n\r\n        if (isObj(keyData)) {\r\n            result = matchObject(combineData, keyData);\r\n        }\r\n\r\n        if (isArray(keyData)) {\r\n            result = matchArray(combineData, keyData);\r\n        }\r\n\r\n        return result;\r\n    },\r\n    parseConfig (\r\n        combineData: object | Array,\r\n        keyData: object | Array,\r\n        configTmp: object\r\n    ) {\r\n        // 代表此次match使用传入的config\r\n        const configCache = Object.assign({}, config);\r\n        let data;\r\n\r\n        extendConfig(configTmp);\r\n        data = this.parse(combineData, keyData);\r\n        extendConfig(configCache);\r\n\r\n        return data;\r\n\r\n    },\r\n    register: (\r\n        obj: object | Array,\r\n        name: string\r\n    ) => {\r\n        pushStack({\r\n            value: obj,\r\n            name: name\r\n        });\r\n    },\r\n    update: (\r\n        obj: object | Array,\r\n        name: string\r\n    ) => {\r\n        updateStack(obj, name);\r\n    },\r\n    // 移除register的内容\r\n    remove: (\r\n        name: string\r\n    ) => {\r\n        removeStack(name);\r\n    },\r\n    removeAll: (\r\n    ) => {\r\n        cleanStack();\r\n    },\r\n    config: (\r\n        obj: object\r\n    ) => {\r\n        extendConfig(obj);\r\n    }\r\n};\r\n\r\nexport default match;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/match/match.js","/**\r\n * @description 存储公共内容\r\n */\r\nimport {\r\n    isFun,\r\n    isObj,\r\n    isStr,\r\n    isArray\r\n} from 'LIB/util';\r\n\r\nlet stack = [];\r\n\r\nexport default stack;\r\n\r\nexport const pushStack = function (\r\n    key: object\r\n) {\r\n    let has = false;\r\n    for (let i = 0; i < stack.length; i++) {\r\n        if (stack[i].name === key.name) {\r\n            stack[i] = key;\r\n            has = true;\r\n        }\r\n    }\r\n\r\n    if (!has) stack.push(key);\r\n};\r\n\r\nexport const updateStack = function (\r\n    key: object | Array,\r\n    name: string\r\n) {\r\n    try {\r\n        for (let i = 0; i < stack.length; i++) {\r\n            if (stack[i].name === name) {\r\n                stack[i].value = key;\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nexport const removeStack = function (\r\n    name: string\r\n) {\r\n    for (let i = 0; i < stack.length;) {\r\n        if (stack[i].name === name) {\r\n            stack.splice(i, 1);\r\n        } else {\r\n            i++;\r\n        }\r\n    }\r\n};\r\n\r\nexport const cleanStack = function () {\r\n    stack = [];\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/match/stack.js","export const isObj = (obj) => {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n};\n\nexport const isFun = (obj) => {\n    return Object.prototype.toString.call(obj) === '[object Function]';\n};\n\nexport const isArray = (obj) => {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexport const isStr = (str) => {\n    return Object.prototype.toString.call(str) === '[object String]';\n};\n\nexport const isNum = (num) => {\n    return Object.prototype.toString.call(num) === '[object Number]';\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/type.js","export const typeTrans = (\n    data: any,\n    type: string\n) => {\n    // 字符串对应的 false 转化为false true 转化为true\n    if (type === 'boolean') {\n        return data.toLowerCase() === 'false' ? false : true;\n    }\n\n    if (type === 'Boolean') {\n        return !!data;\n    }\n\n    if (type === 'int') {\n        return parseInt(data, 10);\n    }\n\n    if (type === 'float') {\n        return parseFloat(data, 10);\n    }\n\n    if (type === 'string') {\n        return data.toString();\n    }\n};\n\n/**\n * @description 类型转换\n **/\nexport const typeCharge = (\n    str: string\n) => {\n    try {\n        str = str.trim();\n        const stringReg = /^(['\"])(.*)\\1$/;\n        const arrayReg = /^\\[\\]$/;\n        const objectReg = /^\\{\\}$/;\n\n        // 若果是以''包住 或者\"\"包住\n        if (stringReg.test(str)) {\n            // 返回字符串\n            str = str.match(stringReg).pop(); \n            return str;\n        }\n\n        if (arrayReg.test(str)) {\n            return [];\n        }\n\n        if (objectReg.test(str)) {\n            return {};\n        }\n\n        // 说明不是字符串类型的值\n        let num = parseFloat(str);\n        let boo = str === 'false' ? false : (str === 'true' ? true: '');\n        str = num || boo !== '' ? num || boo : str;\n        return str;\n    } catch (e) {\n        return str;\n    }\n};\n\nexport const objToArray = (\n    data: Array, // 转换的对象数组\n    key: string // 转化你的值\n) => {\n    try {\n        let arr = [];\n        for (let i of data) {\n            arr = arr.concat(i[key]);\n        }\n\n        return arr;\n    } catch (e) {\n        return [];\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/typeTrans.js","/**\r\n * @description match的自动补全\r\n */\r\nimport config from 'MATCH/config';\r\n\r\nconst autoComplete = (\r\n    result: object,\r\n    data: object\r\n) => {\r\n\r\n    if (!config.autoComplete) return;\r\n\r\n    for (let i in data) {\r\n        if (!result.hasOwnProperty(i)) {\r\n            result[i] = data[i];\r\n        }\r\n    }\r\n};\r\n\r\nexport default autoComplete;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/match/auto-complete.js","/**\r\n * @descprtion 过滤函数 过滤一些undefined等特殊情况\r\n */\r\nimport config from 'MATCH/config';\r\n\r\nconst filter = (\r\n    key: string,\r\n    result: ojbect \r\n) => {\r\n    if (config.filterUndefined && result[key] === undefined) {\r\n        delete result[key];\r\n    }\r\n\r\n    if (config.filterNull && result[key] === null) {\r\n        delete result[key];\r\n    }\r\n};\r\n\r\nexport default filter;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/match/filter.js","/**\r\n * @description 字符串解析内容\r\n */\r\nimport {\r\n    isFun,\r\n    isNum,\r\n    isObj,\r\n    isStr,\r\n    isArray,\r\n    typeCharge,\r\n    objToArray,\r\n    hasReg,\r\n    typeTrans\r\n} from 'LIB/util';\r\n\r\nimport {\r\n    matchObject,\r\n    matchArray\r\n} from 'MATCH/match';\r\n\r\nimport config from 'MATCH/config';\r\n\r\nimport stack from 'MATCH/stack';\r\n\r\nexport const parse = function (\r\n    str: any,\r\n    key: any\r\n) {\r\n    let strArr;\r\n    let i;\r\n    let token;\r\n    let parseResult = {\r\n    };\r\n    const objTokenReg = /\\$\\$\\{\\{(.*)\\}\\}/;\r\n    const arrTokenReg = /\\$\\{(.*)\\}/;\r\n    const typeTokenReg = /\\((boolean|Boolean|int|string|float)\\)\\$/;\r\n\r\n    if (isObj(str)) {\r\n        // 递归映射\r\n        parseResult['matchObject'] = str;\r\n        return parseResult;\r\n    }\r\n\r\n    if (isArray(str)) {\r\n        // 数组递归映射\r\n        parseResult['matchArray'] = str;\r\n        return parseResult;\r\n    }\r\n\r\n    if (isFun(str)) {\r\n        // 执行函数\r\n        parseResult['matchFun'] = str;\r\n        return parseResult;\r\n    }\r\n\r\n    if (!isStr(str) ||\r\n        isIgnore(key) ||\r\n        (!objTokenReg.test(str) && \r\n            !arrTokenReg.test(str))\r\n    ) {\r\n        // 不是字符串 直接返回\r\n        parseResult['noMatch'] = str;\r\n        return parseResult;\r\n    }\r\n\r\n    strArr = str.split('||');\r\n    for (i of strArr) {\r\n        token = i.trim().match(typeTokenReg);\r\n        if (hasReg(token)) {\r\n            parseResult['matchType'] = token[1];\r\n        }\r\n\r\n        token = i.trim().match(objTokenReg);\r\n\r\n        if (token && token.length && token.length >= 1) {\r\n            parseResult['matchParam'] = token[1];\r\n            continue;\r\n        }\r\n\r\n        token = i.trim().match(arrTokenReg);\r\n\r\n        if (token && token.length && token.length >= 1) {\r\n            parseResult['matchArrParam'] = token[1];\r\n            continue;\r\n        }\r\n\r\n        if (!token) {\r\n            //if (i.indexOf('{{') !== -1) {\r\n            //    parseResult['defaultParam'] = 'return b';\r\n            //} else {\r\n            parseResult['default'] = i.trim();\r\n            continue;\r\n            //}\r\n        }\r\n    }\r\n\r\n    return parseResult;\r\n};\r\n\r\n/**\r\n * @description 把exp解析的内容反装回真是值\r\n */\r\nexport const parseToData = function (\r\n    exp: object, // parse 返回值\r\n    data: object, // 映射的params数组\r\n    that: object // 返回对象指针\r\n) {\r\n    try {\r\n        let result;\r\n\r\n\r\n        if (exp['matchObject']) {\r\n            result = matchObject(data, exp['matchObject']);\r\n            return result;\r\n        }\r\n\r\n        if (exp['matchArray']) {\r\n            result = matchArray(data, exp['matchArray']);\r\n            return result;\r\n        }\r\n\r\n        if (exp['noMatch']) {\r\n            result = exp['noMatch'];\r\n            return result;\r\n        }\r\n\r\n        //if (exp['defaultParam']) {\r\n        //    result = getData(data, exp['matchParam']) || getParams(exp['defaultParam'], obj);\r\n        //    return result;\r\n        //}\r\n\r\n        if (exp['matchParam']) {\r\n            result = getData(data, exp['matchParam'], exp['matchType']);\r\n            result = result === undefined ? typeCharge(exp['default']) : result;\r\n            return result;\r\n        }\r\n\r\n        if(exp['matchArrParam']) {\r\n            result = getArrData(data, exp['matchArrParam'], exp['matchType']);\r\n            result = result === undefined ? typeCharge(exp['default']) : result;\r\n            return result;\r\n        }\r\n\r\n        if (exp['matchFun']) {\r\n            result = exp['matchFun'].apply(that, [data].concat(objToArray(stack, 'value')));\r\n            return result;\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nconst getParams = (str, obj) => {\r\n    let createFun = function () {\r\n        return new Function (str);\r\n    }\r\n    obj.title = createFun();\r\n};\r\n\r\nconst getData = (\r\n    data: object,\r\n    exp: string, // 对应的对象字面量字符串 xx.xxx\r\n    type: string // 对应的类型\r\n) => {\r\n    let par = data;\r\n    let token = exp.split('.');\r\n    // 递归获取\r\n    for (let i of token) {\r\n        par = par[i];\r\n    }\r\n\r\n    return type ? typeTrans(par, type) : par;\r\n};\r\n\r\nconst getArrData = (\r\n    data: object,\r\n    exp: string, // 对应的数组序号字符串字面量\r\n    type: string // 对应的类型\r\n) => {\r\n    let token = exp.split('.');\r\n    let index = parseInt(token.shift(), 10);\r\n    if (!isNum(index) || data[index] === undefined) {\r\n        console.log('error: the Array index is not exist!');\r\n        return undefined;\r\n    }\r\n\r\n    return getData(data[index], token.join('.'), type);\r\n};\r\n\r\nconst isIgnore = (\r\n    key: string\r\n) => {\r\n    return config.ignoreTokenKey.indexOf(key) !== -1;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/match/parse.js"],"sourceRoot":""}